name: Dev Branch - Security & Quality Checks

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  security-and-quality-checks:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      # 3️⃣ Install dependencies
      - name: Install Dependencies
        run: npm ci

      # 4️⃣ Security vulnerability scan
      - name: NPM Security Audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate || echo "⚠️ Vulnerabilities found but continuing..."
          npm audit --json > audit-results.json || true

      # 5️⃣ Check for malicious packages
      - name: Check Package Integrity
        run: |
          echo "🛡️ Checking package integrity..."
          npm ls --production || echo "Checking dependencies..."

      # 6️⃣ Dependency vulnerability check with Snyk (Optional - requires SNYK_TOKEN)
      - name: Snyk Security Scan
        continue-on-error: true
        run: |
          npx snyk test --severity-threshold=high || echo "⚠️ Snyk scan completed with warnings"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # 7️⃣ ESLint - Code quality & security patterns
      - name: ESLint Check
        run: |
          echo "🔍 Running ESLint..."
          npx eslint "components/**/*.{ts,tsx,js,jsx}" "app/**/*.{ts,tsx,js,jsx}" --max-warnings=0 || {
            echo "❌ ESLint found issues"
            exit 1
          }

      # 8️⃣ Prettier - Code formatting check
      - name: Prettier Check
        run: |
          echo "💅 Running Prettier..."
          npx prettier --check "components/**/*.{ts,tsx,js,jsx,json,css,scss,md}" "app/**/*.{ts,tsx,js,jsx,json,css,scss,md}" || {
            echo "❌ Prettier formatting issues found"
            exit 1
          }

      # 9️⃣ TypeScript type checking
      - name: TypeScript Check
        run: |
          echo "📘 Running TypeScript check..."
          npx tsc --noEmit || {
            echo "❌ TypeScript errors found"
            exit 1
          }

      # 🔟 Run unit tests
      - name: Run Tests
        run: |
          echo "🧪 Running tests..."
          npm test || {
            echo "❌ Tests failed"
            exit 1
          }

      # 1️⃣1️⃣ Build verification
      - name: Build Project
        run: |
          echo "🏗️ Building project..."
          npm run build || {
            echo "❌ Build failed"
            exit 1
          }

      # 1️⃣2️⃣ Check for sensitive data leaks
      - name: Scan for Secrets
        run: |
          echo "🔐 Scanning for exposed secrets..."
          if grep -r "AKIA" .; then echo "⚠️ Possible AWS key found"; exit 1; fi
          if grep -r "sk-" . | grep -v node_modules; then echo "⚠️ Possible API key found"; exit 1; fi
          echo "✅ No obvious secrets detected"

      # 1️⃣3️⃣ Generate security report
      - name: Security Summary
        if: always()
        run: |
          echo "## 🛡️ Security & Quality Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency audit completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code quality checks passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Type checking passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Secret scan completed" >> $GITHUB_STEP_SUMMARY

  # Auto-merge to main if all checks pass
  auto-merge-to-main:
    needs: security-and-quality-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge dev to main
        run: |
          echo "🔄 All checks passed! Merging dev → main..."
          git fetch origin main
          git checkout main
          git merge origin/dev --no-ff -m "chore: auto-merge dev to main after successful checks"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Merge Success
        run: |
          echo "## ✅ Auto-Merge Successful" >> $GITHUB_STEP_SUMMARY
          echo "Dev branch has been merged to main and will trigger production deployment" >> $GITHUB_STEP_SUMMARY
